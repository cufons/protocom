syntax = "proto3";
//TODO implement the rest of protocol
option optimize_for = LITE_RUNTIME;
message KexMsg {
  enum KexAlg {
    KEX_UNKNOWN = 0;
    KEX_ECDH = 1;
  }
  KexAlg alg = 1;
  bytes pkey = 2;
}

//Initial connection phase
message ClientConnectedStateRequest {
  enum RequestType {
    UNKNOWN = 0;
    REQUEST_KEX = 1;
    REQUEST_AUTH = 2;
  };
  RequestType type = 1;
  optional KexMsg kex = 2;
}

message ServerConnectedStateResponse {
  enum ResponseStatus {
    UNKNOWN = 0;
    OK = 1;
    INVALID_REQUEST = 2;
    REQUEST_ERROR = 3;
    DECODE_ERROR = 4;
    AUTH_REQUIRED = 5;
  }
  ResponseStatus status = 1;
  optional KexMsg kex = 2;
  optional bytes iv = 3;
}

//Authentication phase
message ClientAuthRequest {
  enum RequestType {
    UNKNOWN = 0;
    AUTH_SUPPLY = 1;
    AUTH_INFO = 2;
  }
  RequestType request = 1;
  optional string username = 2;
  optional bytes authCredential = 3;
}

message ServerAuthResponse {
  enum ResponseStatus {
    UNKNOWN = 0;
    AUTH_ACCEPT = 1;
    AUTH_REJECT = 2;
    AUTH_CONTINUE = 3;
    INVALID_REQUEST = 4;
    DECODE_ERROR = 5;
  }
  ResponseStatus status = 1;
  optional string serverInfo = 2;

}